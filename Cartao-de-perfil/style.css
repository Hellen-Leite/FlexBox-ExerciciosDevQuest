body{
    background-color:var(--background-color);
    min-height: 100vh; /* o min-height aqui dá uma defnição para o tamanho do body, permitindo que as propriedades do flex-box sejam aplicadas*/
    font-family: 'Kumbh Sans', sans-serif;
    font-size: 18px; 
    display: flex;
    align-items: center;
    justify-content: center;

}

hr{
    width: 100%; /* a quebra de linha é definida como uma largura de 100% e já gera uma "borda"*/
}
 .container{/*display: flex;
    align-items: center;
    justify-content: center; */
    height: 100%
}
.card{display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-between; /*O primeiro item é deslocado para o início do eixo principal, o último é deslocado para o final do eixo principal e os demais são distribuídos uniformemente entre eles;*/
    gap:25px; /*O gap serve para dar um espaçamento entre um elemento e outro tanto no vertical quanto horizontal, já que aqui não especifica row e column*/
    background-color: #fff;   
    width: 330px;
    height: 350px;
    border-radius: 10px;
     margin:20px 
    
}
.card .informacoes-pessoais{
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    align-items: center;
    gap: 10px;
    height:100%; /* aqui a div de informações pessoais vai ocupar todo espaço da tela que for permitido pra ela, no caso o elemento divide espaço com outros elementos, portanto, não ocupa extamanete 100% da altura do elemento pai.*/

}
.card .photo{
     border-radius: 50%;
    margin-top: 20px;

}


.card .followers {
    display: flex;
    align-items: center;/* vai alinhar os elementos da div ao meio*/
    justify-content: space-evenly;
    width: 100%;
    padding-bottom:30px;
    text-align: center /* vai alinhar o texto em si ao meio*/
}

.followers .number .counter,
.card .informacoes-pessoais p{
    font-weight: 700;
}

.card .informacoes-pessoais .idade,
.car .informacoes-pessoais .country,
.followers .number .informacao{
    color: var( --text-color);
}